@using System.Configuration

@model WebApp.Models.ChangePasswordModel

@{
    string updateTargetId = "divChangePassword";

    string beginCallback = "changePasswordBegin";
    string successCallback = "changePasswordSuccess";
    string failureCallback = "changePasswordFailed";


    AjaxOptions ajaxOptions = new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = updateTargetId,
        OnBegin = beginCallback,
        OnSuccess = successCallback,
        OnFailure = failureCallback,
        InsertionMode = InsertionMode.ReplaceWith


    };

    string formId = "changePassword-form";
    var htmlAttributes = new { id = formId };

    string passwordErrorMsgId = "passwordErrorMsg";

    var statusResult = Model.ResultStatus;

}


@if (statusResult == null)
{
    @section linkScripts{
        @Scripts.Render("~/Scripts/Manage/changePassword.js")
        @Scripts.Render("~/Scripts/validation.js")
    }
}

<div id="@updateTargetId" class="product-intro-section">


    <script type="text/javascript">

    @if (statusResult != null)
    {


            string callBack="";
            if(!String.IsNullOrEmpty(statusResult.CallBack))
            {
                callBack = CompleteCallBack(statusResult.CallBack);
            }
            if(callBack!="")
            {
                <text>
        $(document).ready(function () {

            @Html.Raw(callBack)

        })
        </text>
            }

            string statusType = GetStatusTypeText(statusResult);
            string title = statusResult.Title;
            string msg = statusResult.StatusText;

            if (statusType == "success")
            {
                <text>
        changePasswordedTitleSetter('@title');
        changePasswordedMsgSetter('@msg');
        </text>
            }
            else if (statusType == "error")
            {
                <text>

        changePasswordFailedMsgSetter('@title');
        changePasswordFailedMsgSetter('@msg');
        </text>

            }
            else
            {
                <text>
        changePasswordFailedTitleSetter('@title');
        changePasswordFailedMsgSetter('@msg');
        </text>
            }


        var changePasswordResult = Model.ResultStatus.ChangePasswordResult;

        if(changePasswordResult == WebApp.Models.ChangePasswordResult.Failure)
        {
                <text>
        changePasswordError();
        </text>
        }
         else if (changePasswordResult == WebApp.Models.ChangePasswordResult.Success)
        {
              <text>
        changePassworded();
        </text>
        }
        else  //Excption
        {
                <text>
        changePasswordError();
        </text>

        }

    }
    </script>


    <div class="product-intro-section">
        <h2 class="page-title">變更密碼</h2>
        <div class="shopping-cart-blk member-apply-blk">



            @using (Ajax.BeginForm("ChangePassword", "Manage", null, ajaxOptions, htmlAttributes))
            {
                @Html.AntiForgeryToken()
                <div class="checkout-form-blk">
                    <p class="forget-hint">請輸入您的<strong class="bold">舊密碼與新密碼</strong></p>
                    <div class="form-row flex">

                        @Html.LabelFor(u => u.OldPassword, new { @class = "flex-label require" })
                        @Html.PasswordFor(u => u.OldPassword, new { @class = "flex-ipt", placeholder = "請輸入您的舊密碼" })
                        @Html.ValidationMessageFor(m => m.OldPassword, null, new { @class = "err", })
                    </div>

                    <div class="form-row flex">

                        @Html.LabelFor(u => u.Password, new { @class = "flex-label require" })
                        @Html.PasswordFor(u => u.Password, new { @class = "flex-ipt", placeholder = "請輸入您的新密碼" })
                        @Html.ValidationMessageFor(m => m.Password, null, new { @class = "err", id = passwordErrorMsgId })

                    </div>
                    <div class="form-row flex">

                        @Html.LabelFor(u => u.ConfirmPassword, new { @class = "flex-label require" })
                        @Html.PasswordFor(u => u.ConfirmPassword, new { @class = "flex-ipt", placeholder = "請確認您的新密碼" })
                        @Html.ValidationMessageFor(m => m.ConfirmPassword, null, new { @class = "err", })
                    </div>
                    <div class="shopping-go-on-blk">
                        <button id="btnSubmit" type="button" class="btn-orange">送出</button>
                    </div>

                </div>
            }


        </div>
    </div>


    <script type="text/javascript">

        $(document).ready(function () {

            updateTargetIdSetter('@updateTargetId');

            $('#btnSubmit').click(function (e) {
                e.preventDefault;

                var form = $("#@formId");
                if (!form.valid()) {
                    return false;
                }
                Loading('@updateTargetId');

                var isValid = canSubmit();
                $.when(isValid).then(function (data) {
                    if (data) {
                        form.submit();
                    } else {
                        StopLoading('@updateTargetId');
                    }
                });
            });

            function canSubmit() {
                var def = $.Deferred();

                var validPassword = passwordValid();
                $.when(validPassword)
                   .then(function (password) {

                       if (password) {
                           def.resolve(true);
                       } else {
                           def.resolve(false);
                       }
                   });

                return def.promise();
            }

            function passwordValid() {
                var def = $.Deferred();
                var validPassword = false;
                var inputPassword = $('#@Html.IdFor(m=>m.Password)');
                validPassword = atLeastOneUppercaseLetter(inputPassword.val());
                var spanPasswordErrMsg = $('#@passwordErrorMsgId');
                if (!validPassword) {
                    spanPasswordErrMsg.text('密碼至少要有一個大寫英文字母');
                    def.resolve(false);
                } else {
                    spanPasswordErrMsg.text('');
                    def.resolve(true);
                }
                return def.promise();
            }




        })//end ready

    </script>



</div>

